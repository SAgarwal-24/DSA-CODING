{
#include<bits/stdc++.h>
using namespace std;
struct Node
{
	int data;
	Node *left, *right;
};
Node *constructTree (int [], int );
void printInorder (Node* node)
{
	if (node == NULL)
		return;
	printInorder(node->left);
	printf("%d ", node->data);
	printInorder(node->right);
	
}
int main ()
{   
    int t,n;
   scanf("%d",&t);
    while(t--){
        scanf("%d",&n);
        int post[n];
        for(int i=0;i<n;i++)
        scanf("%d",&post[i]);
    Node* root = constructTree(post, n);
	printInorder(root);
    printf("
");
}
	return 0;
}

}
/*This is a function problem.You only need to complete the function given below*/
/*struct Node
{
	int data;
	Node *left, *right;
};*/


Node* create(int x)
{
    Node* temp= new Node();
    temp->data=x;
    temp->left=NULL;
    temp->right=NULL;
    
    return temp;
}

Node* insert(Node* head,int x)
{
    Node* temp=create(x);
    
    if(head==NULL)
    {
        head=temp;
        return head;
    }
    
    if(head->data<x)
    {
        head->right=insert(head->right,x);
    }
    else
    {
         head->left=insert(head->left,x);
    }

    
    return head;
    
}

Node *constructTree (int post[], int size)
{
    Node* head=NULL;
    
    for(int i=size-1;i>=0;i--)
    head=insert(head,post[i]);
    
    return head;
}